package com.soprasteria.log4jexploit;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.util.Map;

public class Logout4Shell {
    static {
        try {
            try {
                Class<?> constantsClass = Thread.currentThread().getContextClassLoader().loadClass("org.apache.logging.log4j.core.util.Constants");
                Field field = constantsClass.getField("FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS");
                System.out.println("Setting " + field.getName() + " value to True");
                setFinalStatic(field, Boolean.TRUE);
            } catch (NoSuchFieldException e) {
                System.err.println("No field FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS - version <= 2.9.0");
                System.err.println("Will attempt to modify the configuration directly");
            }

            //reconfiguring log4j
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            Class<?> configuratorClass = classLoader.loadClass("org.apache.logging.log4j.core.config.Configurator");
            try {
                Method reconfigure = configuratorClass.getMethod("reconfigure");
                reconfigure.invoke(null);
            } catch (Exception ex) {
            }
        } catch (Exception e) {
            System.err.println("Exception " + e);
            e.printStackTrace();
        }
    }


    static void setFinalStatic(Field field, Object newValue) throws Exception {
        setAccess(field);
        field.set(null, newValue);
    }

    private static void setAccess(Field field) throws NoSuchFieldException, IllegalAccessException {
        field.setAccessible(true);
        Field modifiersField = Field.class.getDeclaredField("modifiers");
        modifiersField.setAccessible(true);
        modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL);
    }

}
